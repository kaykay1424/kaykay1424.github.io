/*
	Explanation of program:
	When a user enters an article keyword(s) and chooses the number of articles they wish to see displayed 
	that number of Wikipedia articles pertaining to the article keyword(s) will be displayed below the form. 
	If they click the lucky button only 1 article pertaining to the article keyword(s) will be displayed.
	If they click the random button, one random article will be displayed regardless of article keyword(s).
	Each article box will show the title and have a max of 5 sentences shown giving a brief overview of the article
	along with a star button to save the article to the browser's local storage and a bookmark button to bookmark it (it will
	not be saved to local storage and therefore will not be available after refreshing the page). Clicking on the article
	title in the article box or in the favorites or pending bars at the bottom of the screen will open that article
	up in a new page. The user can delete the articles they save and favorite the ones they add to the pending bar.   
	
	Explanation of javaScript:
	Once the page is loaded, if the user has previously favorited an article, the favorites bar will be shown at
	the bottom right corner of the page with the number of articles favorited and the list of articles.
	
	If the user searches for an article by clicking the default search button any previous articles listed will disappear
	the article search keywords and search limit number will be stored in variables and a an ajax request will be made
	to the wikipedia api with the parameters set to the keyword variable and searchLimit variable (or if no search limit is
	provided the default will be 10). A for loop will then be run to store the titles of the articles that the ajax request
	returns in the storeTitlesArray variable . After that another for loop is run to loop through the storeTitlesArray variable
	in which the extractInfo function is run for each title to get the information of each article. The extractInfo function
	makes an ajax request to the wikipedia api with the parameter set to the title variable from the defaultSearch function
	and 3 sentences of the introductory paragraph. It then stores the info of each article in its own variable and that
	variable is passed onto the extractURL function. The extractURL makes an ajax call to the api with the parameter
	set to the title variable and stores the url of each article. The listArticle function then takes the title variable, url variable,
	and info variable to create a div with each article title, brief summary, and the functions to bookmark or favorite articles.
	If a user clicks on the star to favorite an article the saveFavorites function creates a new array and stores it in the 
	browser's local storage or it pushes it to the array already stored in the browser's local storage.
	If a user clicks the delete button in the favorites bar a for loop will be run to loop through the current elements in the 
	favorites array stored in local storage and deletes that specific article from the array. If a user clicks the bookmark
	button that article will be appended to the bookmarks-storage-ul and the bookmarks counter variable will be incremented
	to show how many articles have been bookmarked. If they click the delete button in the bookmarks bar, the article 
	will simply be removed from the list.
	
	If a user searches for an article by clicking the lucky search button the same process will happen except that it will
	be one random article chosen based on the keyword(s) provided by using the Math.random method to choose a number that is
	used to choose which element of the array of titles should be shown. If a user searches for an article by clicking the 
	random search button one article will also be shown but it will not be based on any keywords provided but will be
	randomly generated by the api.
	
*/	
$(document).ready(function() {
	
	var options = {
		placement: function () {
			let screenWidth = $(window).width();
			if (screenWidth < 800) {
				return "top";
			} else {
				return "right";
			}
		}
	};
	
	$('#searchbox [data-toggle="popover"]').popover(options);
	
	$(window).resize(function() {
		$('#searchbox [data-toggle="popover"]').popover(options);
		
	}); 
	
	$('[data-toggle="popover"]').popover();
	
	let favorites = JSON.parse(localStorage.getItem('favorites'));
	if (favorites !== null) {
		fetchFavorites();
	
	}
	
	$('#favorites-button').mouseenter(function() {
		$('#favorites-button .badge').hide();
		$('#favorites-button').append('<span style="font-size:20px" class="caret"></span>');
	});
	
	$('#favorites-button').mouseleave(function() {
		$('#favorites-button .badge').show();
		$('#favorites-button .caret').remove();
	});
	
	$('#bookmarks-button').mouseenter(function() {
		$('#bookmarks-button .badge').hide();
		$('#bookmarks-button').append('<span style="font-size:20px" class="caret"></span>');
	});
	
	$('#bookmarks-button').mouseleave(function() {
		$('#bookmarks-button .badge').show();
		$('#bookmarks-button .caret').remove();
	});
	
	
	

	$('form').on('submit', function(e) {
		e.preventDefault();
		
	});
	
	$('#search-button').click(defaultSearch);
	$('#lucky').click(luckySearch);
	$('#random').click(randomSearch);
	
	favoriteArticleCounter = 0;
	bookmarkArticleCounter = 0;
	
	function randomSearch() {
		$('.title-div').hide();
		$('#alert-warning').hide();
		$('#search').removeClass('border-red');
		$.ajax({
			url: "https://en.wikipedia.org/w/api.php?action=query&list=random&rnlimit=1&utf8=&format=json",
			dataType: "jsonp",
			success: function(responses) {
				let searchArray = responses.query.random;
				let storeTitlesArray = [];
				for (let i = 0; i < searchArray.length; i++) {
					storeTitlesArray.push(searchArray[i].title);
				}
				extractInfo(storeTitlesArray[0]);	
				} // end of success()
			}); // end of $.ajax
		} // end of randomSearch()
	function luckySearch() {
		$('.title-div').hide();
		let keyword = $('#search').val();
		let searchLimit = $('#search-limit').val();
		
		if (keyword.length !== 0) {
			$('#alert-warning').hide();
			$('#search').removeClass('border-red');
		}
		else if (keyword.length === 0) {
			$('.title-div').hide();
			$('#alert-warning').show().addClass('animated flash');
			$('#search').addClass('border-red');
			return false;
		}
		
		let titleOfArticle = '';
		$.ajax({
			url: "https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch=" + keyword + "&utf8=&format=json",
			dataType: "jsonp",
			success: function(info) {
				let searchArray = info.query.search;
				let storeTitlesArray = [];
				for (let i = 0; i < searchArray.length; i++) {
					storeTitlesArray.push(searchArray[i].title);
				}
				let random = Math.floor((Math.random() * storeTitlesArray.length) + 1);
				extractInfo(storeTitlesArray[random]);	

			} // end of success()
		}); // end of $.ajax
		$('form')[0].reset();

	} // end of luckySearch()
	
	function defaultSearch() {
	
		$('.title-div').hide();
		let keyword = $('#search').val();
		let searchLimit = $('#search-limit').val();
		
		if (searchLimit.length === 0) {
			searchLimit = 10;
		}
		
		if (keyword === '') {
			$('.title-div').hide();
			$('#alert-warning').show().addClass('animated flash');
			$('#search').addClass('border-red');
			return false;
		}
		else if (keyword !== '') {
			
			$('#alert-warning').hide();
			$('#search').removeClass('border-red');
			
		}
		let titleOfArticle = '';

		$.ajax({
			url: "https://en.wikipedia.org/w/api.php?action=query&list=search&srlimit=" + searchLimit + "&srsearch=" + keyword + "&utf8=&format=json",
			dataType: "jsonp",
			success: function(info) {
				let searchArray = info.query.search;
				let storeTitlesArray = [];
				for (let i = 0; i < searchArray.length; i++) {
				storeTitlesArray.push(searchArray[i].title);
				}
				for (let j = 0; j < storeTitlesArray.length; j++) {
					extractInfo(storeTitlesArray[j]);	
				}
			} // end of success()
		}); // end of $.ajax
		$('form')[0].reset();
	} // end of defaultSearch()

	function extractInfo(word) {
		$.ajax({
			url: "http://en.wikipedia.org/w/api.php?action=query&prop=extracts&exintro=&explaintext=&exsentences=3&titles=" + word + "&utf8=&format=json",
			dataType: "jsonp",
			success: function(data,url) {
				let queried1 = data.query.pages;
				let keys1 = Object.keys(queried1);
				let title = $('.title').html();
				extractURL(word, queried1, keys1);
			} // end of success()
		}); // end of $.ajax
	} // end of extractInfo()

	let status = true;
	
	function listArticle(title1, extract, URL) {
		if ( extract.length === 0 ) {
			let extract = 'N/A';
		}
		$("<div class='title-div'>" +"<strong>Title: </strong>" + '<a href="'+URL+'" target="_blank">' + title1 + '</a>'+ "</br>" + "<strong>Brief Intro:</strong>"+ "<p>"+ extract + "</p> " +"</div>").append('<a href="#" data-toggle="popover" data-placement="left" data-trigger="hover">' + '<span class="glyphicon glyphicon-star" onclick="saveFavorites(\'' + title1 + '\',\'' + URL + '\')" ></span>' + '</a>'+ ' ' + '<a href="#" data-toggle="popover" data-trigger="hover">' + '<span class="glyphicon glyphicon-bookmark"></span>' + '</a>').on('mouseenter',function() {
			$(this).addClass('animated pulse');
		
		}).on('mouseleave',function() {
			$(this).removeClass('animated pulse');
		
		}).on('click', '.glyphicon-star', function() {
			/*let titleArray = [];
			titleArray.push(URL);
			let favoritesStorage = document.getElementById('favorites-storage-ul');
			let name;
			let url;
			name = favorites[favorites.length-1].title;
			url = favorites[favorites.length-1].url;*/

	
		}).on('click', '.glyphicon-bookmark',function() {
			let matchingArticlesLength = $('.bookmarks-li:contains('+title1+')').length;
			if ( matchingArticlesLength !== 0 ) {
				alert('This article has already been bookmarked.');
				return false;
			}
			let bookmarksLi = $('<li class="bookmarks-li" style="font-size: 16px">'
			+ '<span>' + '<a href="'+URL+'" target="_blank">' + title1 + '</a>' + ' ' + '<span class="glyphicon glyphicon-star" onclick="saveFavorites(\'' + title1 + '\',\'' + URL + '\')"></span>'+ ' ' + '<span class="delete glyphicon glyphicon-remove"> </span>' +'</li>');
			bookmarksLi.on('click', '.delete', function() {
			bookmarksLi.remove();
			bookmarkArticleCounter--;
			$('#bookmarks-amount').html(bookmarkArticleCounter);
			if (bookmarkArticleCounter < 1) {
				$('#bookmarks-bar').hide();
			}
			
		}).appendTo('#bookmarks-storage-ul');

		bookmarkArticleCounter++;
		$('#bookmarks-amount').html(bookmarkArticleCounter);
		$('#bookmarks-bar').show();
		}).appendTo('#article-list');

	} // end of listArticle()

	function extractURL(title, query, key) {
		$.ajax({
			url: "http://en.wikipedia.org/w/api.php?action=query&prop=info&inprop=url&titles=" + title +"&utf8=&format=json" ,
			dataType: "jsonp",
			success: function(response) {
				let queried2 = response.query.pages;
				let keys2 = Object.keys(queried2);
				//console.log(queried2[keys2[0]].fullurl);
				let fullURL = queried2[keys2[0]].fullurl;
				let queries = query[key[0]].extract;

				listArticle(query[key[0]].title, query[key[0]].extract, fullURL);
		
			} // end of success()
		}); // end of $.ajax
	} // end of extractURL() 
	
	
	}); // end of document ready 
	
	
	
	function saveFavorites(title1, URL) {
		if (localStorage.getItem('favorites') !== null) {
			let favorites = JSON.parse(localStorage.getItem('favorites'));
			for (let i = 0; i < favorites.length; i++) {
				let name = favorites[i].title;
				let url = favorites[i].url;

				if (title1 === name || URL === url) {
				alert('This article has already been favorited.');
				return false;
				}
	
	
			} // end of for loop
		} // end of if
		let favorite = {
			title: title1,
			url: URL
		}
		
		if (localStorage.getItem('favorites') === null) {
			let favorites = [];
			favorites.push(favorite);
			localStorage.setItem('favorites', JSON.stringify(favorites));
			} 
		else {
			let favorites = JSON.parse(localStorage.getItem('favorites'));
			favorites.push(favorite);
			localStorage.setItem('favorites', JSON.stringify(favorites));
		}
		fetchFavorites();

	} // end of saveFavorites()
	
	function deleteFavorites(url) {
		let favorites = JSON.parse(localStorage.getItem('favorites'));
		for (let i = 0; i < favorites.length; i++) {
			if (favorites[i].url == url) {
			favorites.splice(i,1);
			}
		}

		localStorage.setItem('favorites', JSON.stringify(favorites));
		fetchFavorites();

	} // end of deleteFavorites()
	
	function fetchFavorites() {
		let favoritesStorage = document.getElementById('favorites-storage-ul');
		favoritesStorage.innerHTML = '';
		let favorites = JSON.parse(localStorage.getItem('favorites'));
		if (favorites.length < 1) {
			$('#favorites-bar').hide();
		}
		else if (favorites.length >= 1) {
			$('#favorites-bar').show();
		}
		for (let i = 0; i < favorites.length; i++) {
			let name = favorites[i].title;
			let url = favorites[i].url;

			$('#favorites-amount').html(favorites.length);
			favoritesStorage.innerHTML += '<li class="favorites-li" style="font-size: 16px">' +
		 	'<a href="'+url+'" target="_blank">' + name + '</a>' + ' ' +'<span  class="delete-favorites glyphicon glyphicon-remove" onclick="deleteFavorites(\'' + url + '\')" > </span>'   + '</li>';
			let deleteFavorites = document.getElementsByClassName('delete-favorites');
			/*let parent = $(this).parents().map(function(){
			return this.innerHTML;}).get().join(' ');*/
	
	
		} // end of for loop
	} // end of deleteFavorites()
